"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var Card=function(){function n(e,t){_classCallCheck(this,n),this.id=t,this.cardsHolder=document.getElementById(e),this.cardElement="",this.$card="card",this.$title="card-title",this.$body="card-body",this.$delBtn="card-delete"}return _createClass(n,[{key:"render",value:function(){var r=this;fetch("https://jsonplaceholder.typicode.com/posts/".concat(this.id)).then(function(e){return e.json()}).then(function(e){var t=e.title,n=e.body;r.onDisplay(t,n)})}},{key:"cardContainer",value:function(){var e=document.createElement("div");return e.id="".concat(this.id),e.className=this.$card,this.cardsHolder.appendChild(e),this.cardElement=e,this.cardElement}},{key:"cardTitle",value:function(e,t){var n=document.createElement("h3");n.className=this.$title,n.innerText=t,e.appendChild(n)}},{key:"cardBody",value:function(e,t){var n=document.createElement("p");n.className=this.$body,n.innerText=t,e.appendChild(n)}},{key:"deleteCard",value:function(e){var t=this,n=document.createElement("button");n.className=this.$delBtn,n.textContent="Remove post: ".concat(this.id),n.addEventListener("click",function(){return t.cardRemove()}),e.appendChild(n)}},{key:"cardRemove",value:function(){var e=document.getElementById("".concat(this.id));e&&this.cardsHolder.removeChild(e)}},{key:"onDisplay",value:function(e,t){this.cardRemove(),this.cardContainer();var n=this.cardElement;this.cardTitle(n,e),this.cardBody(n,t),this.deleteCard(n)}}]),n}(),cards=document.getElementById("cards-holder"),testDiv=document.getElementById("test"),links=document.querySelectorAll("#card-trigger li a");function createCard(e){var t=e.target.dataset.sku;new Card("cards-holder",t).render()}links.forEach(function(e){return e.addEventListener("click",createCard)});var removeCards=document.getElementById("remover");removeCards.addEventListener("click",function(){cards.innerText=""});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJDYXJkIiwiZGl2SG9sZGVyIiwiaWQiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiY2FyZHNIb2xkZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2FyZEVsZW1lbnQiLCIkY2FyZCIsIiR0aXRsZSIsIiRib2R5IiwiJGRlbEJ0biIsIl90aGlzIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiZGF0YSIsInRpdGxlIiwiYm9keSIsIm9uRGlzcGxheSIsImNhcmQiLCJjcmVhdGVFbGVtZW50IiwiY29udGVudCIsImNhcmRUaXRsZSIsImNsYXNzTmFtZSIsImlubmVyVGV4dCIsImFwcGVuZENoaWxkIiwiY2FyZEJvZHkiLCJfdGhpczIiLCJyZW1vdmVDYXJkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhcmRSZW1vdmUiLCJlbGVtZW50IiwiY29uY2F0IiwicmVtb3ZlQ2hpbGQiLCJkZWxldGVDYXJkIiwiY2FyZHMiLCJ0ZXN0RGl2IiwibGlua3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGV4dENvbnRlbnQiLCJyZW5kZXIiLCJmb3JFYWNoIiwiZWwiLCJjcmVhdGVDYXJkIiwicmVtb3ZlQ2FyZHMiXSwibWFwcGluZ3MiOiJBQUFBLHVaQVNNQSxnQkFDSixTQUFBQSxFQUFZQyxFQUFXQyxHQUFJQyxnQkFBQUMsS0FBQUosR0FDekJJLEtBQUtGLEdBQUtBLEVBQ1ZFLEtBQUtDLFlBQWNDLFNBQVNDLGVBQWVOLEdBQzNDRyxLQUFLSSxZQUFjLEdBRW5CSixLQUFLSyxNQUFRLE9BQ2JMLEtBQUtNLE9BQVMsYUFOaEJOLEtBQUFPLE1BQVlWLFlBQWVHLEtBQUFRLFFBQUEsb0VBYWxCLElBQUFDLEVBQUFULEtBUlBVLE1BQUtMLDhDQUFBQSxPQUFMTCxLQUFBRixLQUNBYSxLQUFLTCxTQUFBQSxHQUFTLE9BQUFNLEVBQWRDLFNBQ0FGLEtBQUtKLFNBQUFBLEdBQ0wsSUFBS0MsRUFBVU0sRUFBQUMsTUFDaEJDLEVBQUFGLEVBQUFFLEtBQ0RQLEVBQUFRLFVBQUFGLEVBQUFDLDZDQUdTLElBQUFFLEVBQUFoQixTQUFBaUIsY0FBQSxPQXFCUCxPQXBCQVQsRUFBQUEsR0FBQUEsR0FBQUEsT0FBS1YsS0FBQUYsSUFDV29CLEVBQ2JQLFVBQUtYLEtBQUFjLE1BQ0pkLEtBQUFDLFlBQVlhLFlBQVpJLEdBQ0FsQixLQUFBSSxZQUFlYyxFQWdCWmxCLEtBQUtJLDhDQU9KQSxFQUFhZ0IsR0FFckIsSUFBSUMsRUFBWW5CLFNBQVNpQixjQUFjLE1BQ3ZDRSxFQUFVQyxVQUFZdEIsS0FBS00sT0FsQjNCZSxFQUFBRSxVQUFBSCxFQUNBaEIsRUFBUW9CLFlBQVlMLG9DQU9wQmYsRUFBWUEsR0FFZCxJQUFBcUIsRUFBQXZCLFNBQUFpQixjQUFBLEtBb0JFTSxFQUFTSCxVQUFZdEIsS0FBS08sTUFDMUJrQixFQUFTRixVQUFZSCxFQUNyQmhCLEVBQVlvQixZQUFZQyxzQ0FoQnhCckIsR0FBQSxJQUFBc0IsRUFBQTFCLEtBRUFxQixFQUFVQyxTQUFZSCxjQUF0QixVQUNBRSxFQUFTQyxVQUFUdEIsS0FBc0JvQixRQUN0QmhCLEVBQUFBLFlBQUFBLGdCQUFBQSxPQUFBSixLQUFBRixJQUNENkIsRUFBQUMsaUJBQUEsUUFBQSxXQUFBLE9BQUFGLEVBQUFHLGVBQ0R6QixFQUFBb0IsWUFBQUcsd0NBNEJFLElBQUlHLEVBQVU1QixTQUFTQyxlQUFULEdBQUE0QixPQUEyQi9CLEtBQUtGLEtBQzlDZ0MsR0FBVTlCLEtBQUtDLFlBQVkrQixZQUFZRixxQ0F0Qm5DTCxFQUFRVCxHQUNaUyxLQUFBQSxhQUNBQSxLQUFBQSxnQkFDQXJCLElBQUFBLEVBQVlvQixLQUFBQSxZQUNieEIsS0FBQXFCLFVBQUFTLEVBQUFmLEdBQ0RmLEtBQUF5QixTQUFBSyxFQUFBZCxHQTBCRWhCLEtBQUtpQyxXQUFXSCxZQUlkSSxNQUFRaEMsU0FBU0MsZUFBZSxnQkFDaENnQyxRQUFVakMsU0FBU0MsZUFBZSxRQUNsQ2lDLE1BQVFsQyxTQUFTbUMsaUJBNUJWakMsc0JBSVR1QixTQUFBQSxXQUFXVyxHQUNYWCxJQUFBQSxFQUFBQSxFQUFXQyxPQUFBQSxRQUFBQSxJQUNYeEIsSUFBV1IsS0FBQzRCLGVBQVlHLEdBQ3pCWSxTQU5DSCxNQUFBSSxRQUFBLFNBQUFDLEdBQUEsT0FBQUEsRUFBQWIsaUJBQUEsUUFBQWMsY0EwQ0osSUFBSUMsWUFBY3pDLFNBQVNDLGVBQWUsV0FHMUN3QyxZQUFZZixpQkFBaUIsUUFuQ2QsV0FDWE0sTUFBQVgsVUFBY3JCIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gQ2FyZCBjbGFzcyBjcmVhdGlvblxyXG5cclxuLyoqIFRoaXMgY2xhc3MgYWltcyB0byBjcmVhdGUgYSBzaW1wbGUgY2FyZCBmcm9tIHRoZSBlbmRwb2ludCByZXNwb25zZVxyXG4gKiBAY29uc3RydWN0b3JcclxuICogQHBhcmFtIHtzdHJpbmd9IGRpdkhvbGRlciAtIFRoZSBET00gZWxlbWVudCBJRC5cclxuICogQHBhcmFtIHtpZH0gaWQgLSB0aGUgcG9zdCBJRCB0byBiZSByZW5kZXJlZC5cclxuICovXHJcbmNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGRpdkhvbGRlciwgaWQpIHtcclxuICAgIHRoaXMuaWQgPSBpZDtcclxuICAgIHRoaXMuY2FyZHNIb2xkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZIb2xkZXIpO1xyXG4gICAgdGhpcy5jYXJkRWxlbWVudCA9IFwiXCI7XHJcbiAgICAvL3N0eWxlIGNsYXNzZXNcclxuICAgIHRoaXMuJGNhcmQgPSBcImNhcmRcIjtcclxuICAgIHRoaXMuJHRpdGxlID0gXCJjYXJkLXRpdGxlXCI7XHJcbiAgICB0aGlzLiRib2R5ID0gXCJjYXJkLWJvZHlcIjtcclxuICAgIHRoaXMuJGRlbEJ0biA9IFwiY2FyZC1kZWxldGVcIjtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogVGhpcyBtZXRob2QgZ2V0IGEgcmVzcG9uc2UgZnJvbSB0aGUgQVBJIGFuZCBSZW5kZXJzIG9uIERPTVxyXG4gICAqL1xyXG4gIHJlbmRlcigpIHtcclxuICAgIGZldGNoKGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJHt0aGlzLmlkfWApXHJcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgbGV0IHRpdGxlID0gZGF0YS50aXRsZTtcclxuICAgICAgICBsZXQgYm9keSA9IGRhdGEuYm9keTtcclxuICAgICAgICB0aGlzLm9uRGlzcGxheSh0aXRsZSwgYm9keSk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBUaGlzIG1ldGhvZCBjcmVhdGVzIHRoZSBTaW5nbGUgQ2FyZCBjb250YWluZXIgb24gRE9NXHJcbiAgICovXHJcbiAgY2FyZENvbnRhaW5lcigpIHtcclxuICAgIC8vQ2FyZCBjb250YWluZXJcclxuICAgIGxldCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIC8vQ2FyZCBJZFxyXG4gICAgY2FyZC5pZCA9IGAke3RoaXMuaWR9YDtcclxuICAgIC8vQ2FyZCBjbGFzc1xyXG4gICAgY2FyZC5jbGFzc05hbWUgPSB0aGlzLiRjYXJkO1xyXG4gICAgdGhpcy5jYXJkc0hvbGRlci5hcHBlbmRDaGlsZChjYXJkKTtcclxuICAgIHRoaXMuY2FyZEVsZW1lbnQgPSBjYXJkO1xyXG4gICAgcmV0dXJuIHRoaXMuY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNhcmRFbGVtZW50IC0gRWxlbWVudCB3aGVyZSB0aGUgVGl0bGUgd291bGQgYmUgYXBwZW5kZWRcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCAtIFRoZSB0ZXh0IGNvbnRlbnQgZm9yIGEgdGl0bGVcclxuICAgKi9cclxuICBjYXJkVGl0bGUoY2FyZEVsZW1lbnQsIGNvbnRlbnQpIHtcclxuICAgIC8vQ2FyZCBUaXRsZSBlbGVtZW50XHJcbiAgICBsZXQgY2FyZFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xyXG4gICAgY2FyZFRpdGxlLmNsYXNzTmFtZSA9IHRoaXMuJHRpdGxlO1xyXG4gICAgY2FyZFRpdGxlLmlubmVyVGV4dCA9IGNvbnRlbnQ7XHJcbiAgICBjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChjYXJkVGl0bGUpO1xyXG4gIH1cclxuICAvKipcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjYXJkRWxlbWVudCAtIEVsZW1lbnQgd2hlcmUgdGhlIEJvZHkgd291bGQgYmUgYXBwZW5kZWRcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCAtIFRoZSB0ZXh0IGNvbnRlbnQgZm9yIGNhcmQncyBib2R5XHJcbiAgICovXHJcbiAgY2FyZEJvZHkoY2FyZEVsZW1lbnQsIGNvbnRlbnQpIHtcclxuICAgIC8vQ2FyZCBCb2R5IGVsZW1lbnRcclxuICAgIGxldCBjYXJkQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgY2FyZEJvZHkuY2xhc3NOYW1lID0gdGhpcy4kYm9keTtcclxuICAgIGNhcmRCb2R5LmlubmVyVGV4dCA9IGNvbnRlbnQ7XHJcbiAgICBjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChjYXJkQm9keSk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNhcmRFbGVtZW50IC0gRWxlbWVudCB3aGVyZSB0aGUgYnV0dG9uIHdvdWxkIGJlIGFwcGVuZGVkXHJcbiAgICovXHJcbiAgZGVsZXRlQ2FyZChjYXJkRWxlbWVudCkge1xyXG4gICAgLy8gRGVsZXRlIENhcmQgQnV0dG9uIGVsZW1lbnRcclxuICAgIGxldCByZW1vdmVDYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIHJlbW92ZUNhcmQuY2xhc3NOYW1lID0gdGhpcy4kZGVsQnRuO1xyXG4gICAgcmVtb3ZlQ2FyZC50ZXh0Q29udGVudCA9IGBSZW1vdmUgcG9zdDogJHt0aGlzLmlkfWA7XHJcbiAgICByZW1vdmVDYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLmNhcmRSZW1vdmUoKSk7XHJcbiAgICBjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChyZW1vdmVDYXJkKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogVGhpcyBtZXRob2Qgc2VsZWN0IHRoZSBjYXJkIGJ5IElEIGF0dHJpYnV0ZSBhbmQgcmVtb3ZlIGZyb20gRE9NXHJcbiAgICovXHJcbiAgY2FyZFJlbW92ZSgpIHtcclxuICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7dGhpcy5pZH1gKTtcclxuICAgIGVsZW1lbnQgPyB0aGlzLmNhcmRzSG9sZGVyLnJlbW92ZUNoaWxkKGVsZW1lbnQpIDogXCJcIjtcclxuICB9XHJcblxyXG4gIG9uRGlzcGxheSh0aXRsZSwgYm9keSkge1xyXG4gICAgdGhpcy5jYXJkUmVtb3ZlKCk7XHJcbiAgICB0aGlzLmNhcmRDb250YWluZXIoKTtcclxuICAgIGxldCBlbGVtZW50ID0gdGhpcy5jYXJkRWxlbWVudDtcclxuICAgIHRoaXMuY2FyZFRpdGxlKGVsZW1lbnQsIHRpdGxlKTtcclxuICAgIHRoaXMuY2FyZEJvZHkoZWxlbWVudCwgYm9keSk7XHJcbiAgICB0aGlzLmRlbGV0ZUNhcmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcbi8vU2VsZWN0b3JzIG9uIERPTVxyXG5jb25zdCBjYXJkcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FyZHMtaG9sZGVyXCIpO1xyXG5jb25zdCB0ZXN0RGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpO1xyXG5jb25zdCBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjY2FyZC10cmlnZ2VyIGxpIGFcIik7XHJcblxyXG4vLyBFdmVudCBsaXN0ZW5lciBvbiBlYWNoIGxpbmsgdG8gY3JlYXRlIGEgQ2FyZCBvYmplY3RcclxubGlua3MuZm9yRWFjaChlbCA9PiBlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY3JlYXRlQ2FyZCkpO1xyXG5cclxuLy9UbyBsaW5rIGxpc3RlbmVyXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoZSkge1xyXG4gIGxldCBwb3N0SWQgPSBlLnRhcmdldC5kYXRhc2V0LnNrdTtcclxuXHJcbiAgLy8gICBjb25zb2xlLmxvZyhwb3N0SWQpO1xyXG4gIGxldCBjYXJkID0gbmV3IENhcmQoXCJjYXJkcy1ob2xkZXJcIiwgcG9zdElkKTtcclxuICBjYXJkLnJlbmRlcigpO1xyXG59XHJcblxyXG4vL1JlbW92ZSBMaW5rIHNlbGVjdG9yXHJcbmxldCByZW1vdmVDYXJkcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVtb3ZlclwiKTtcclxuXHJcbi8vIFJlbW92ZSBldmVyeSBjYXJkIG9uIHRoZSBjYXJkcy1ob2xkZXJcclxucmVtb3ZlQ2FyZHMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjYXJkcy5pbm5lclRleHQgPSBcIlwiO1xyXG59KTtcclxuIl19
